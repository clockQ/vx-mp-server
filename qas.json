{
    "Docker 是如何做到轻量级的？": "让我们假设你有一个容器影像（image）容量是1GB，如果你想用一个完整的虚拟机来装载，你得需要容量的大小是1GB乘上你需要虚拟机的数量。 但使用Linux容器虚拟化技术（LXC）和AuFS，你可以共享1GB容量，如果你需要1000个容器，假设他们都运行在同样的系统影像上，你仍然可以用稍微比1GB多一点的空间来给容器系统.这较之完整的虚拟机节省了大大的资源。 一个完整的虚拟化系统得到了分给它的自有全部资源中，只有最小的共享。你虽然获得了更多的隔离，但是这是很珍贵的。\n使用 Linux容器虚拟化技术（LXC），隔离性方面有所缺失，但是他们更加轻量，而且需要更少资源。所以你可以轻松运行1000个容器在一个宿主机器上，甚至眼都不眨。",
    "PV、VG、PE、LV、LE的概念？": "PV（Physical Volume，物理卷）VG（Volume Group，卷组）PE(Physical Extend，物理扩展)LV(Logical Volume，逻辑卷)LE（Logical Extent，逻辑扩展）",
    "此时在git目录下，新建文件helloWorld.scala。然后想继续修改，但是怕最近的修改出错，想可以随时回到当前状态，那要怎么做呢？如果我想让这个开发的文件，在小组内的其他成员也可见，又要怎么做呢？": "git add =&gt; 暂存区git status 状态查看器git commit =&gt; 本地仓库git push =&gt; 远程仓库git pull =&gt; 同步远程仓库",
    "为什么commit id需要用这么一大串数字表示呢？": "因为Git是分布式的版本控制系统，后面我们还要研究多人在同一个版本库里工作，如果大家都用1,2,3……作为版本号，那肯定就会导致版本号冲突。"
}